#if !aot

	public abstract class VertexBuffer
		: IVertexBuffer
	{
		public virtual Int32 VertexCount
		{ 
			get	
			{
				throw new NotImplementedException();	
			}
		}
		
		public virtual void SetData<T> (T[] data) 
			where T
				: struct
				, IVertexType	
		{
			throw new NotImplementedException();	
		}

		public virtual VertexDeclaration VertexDeclaration
		{ 
			get	
			{
				throw new NotImplementedException();	
			}
		}


		// not yet implemented
		public virtual void GetData<T> (T[] data) 
			where T
				: struct
				, IVertexType
		{
			throw new NotImplementedException();	
		}

		public virtual void GetData<T> (
			T[] data, 
			Int32 startIndex, 
			Int32 elementCount) 
			where T
				: struct
				, IVertexType
		{
			throw new NotImplementedException();	
		}

		public virtual void GetData<T> (
			Int32 offsetInBytes, 
			T[] data, 
			Int32 startIndex, 
			Int32 elementCount, 
			Int32 vertexStride) 
			where T
				: struct
				, IVertexType
		{
			throw new NotImplementedException();	
		}

		public virtual void SetData<T> (
			T[] data, 
			Int32 startIndex, 
			Int32 elementCount) 
			where T
				: struct
				, IVertexType
		{
			throw new NotImplementedException();	
		}

		public virtual void SetData<T> (
			Int32 offsetInBytes, 
			T[] data, 
			Int32 startIndex, 
			Int32 elementCount, 
			Int32 vertexStride) 
			where T
				: struct
				, IVertexType
		{
			throw new NotImplementedException();	
		}

	}

#endif
