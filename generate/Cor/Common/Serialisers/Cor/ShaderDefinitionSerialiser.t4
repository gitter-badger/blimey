    public class ShaderDefinitionSerialiser
        : Serialiser<ShaderDefinition>
    {
        Serialiser<String> stringSerialiser;
        Serialiser<List<String>> stringListSerialiser;
        Serialiser<List<ShaderInputDefinition>> shaderInputDefinitionListSerialiser;
        Serialiser<List<ShaderSamplerDefinition>> shaderSamplerDefinitionListSerialiser;
        Serialiser<List<ShaderVariableDefinition>> shaderVariableDefinitionListSerialiser;

        public ShaderDefinitionSerialiser () {}

        public override void Initialise(SerialiserDatabase manager)
        {
            stringSerialiser = manager.GetSerialiser<String>();
            stringListSerialiser = manager.GetSerialiser<List<String>>();
            shaderInputDefinitionListSerialiser = manager.GetSerialiser<List<ShaderInputDefinition>>();
            shaderSamplerDefinitionListSerialiser = manager.GetSerialiser<List<ShaderSamplerDefinition>>();
            shaderVariableDefinitionListSerialiser = manager.GetSerialiser<List<ShaderVariableDefinition>>();
        }

        public override ShaderDefinition Read(BinaryReader abr)
        {
            var sd = new ShaderDefinition ()
            {
                Name = stringSerialiser.Read (abr),
                PassNames = stringListSerialiser.Read (abr),
                InputDefinitions = shaderInputDefinitionListSerialiser.Read (abr),
                SamplerDefinitions = shaderSamplerDefinitionListSerialiser.Read (abr),
                VariableDefinitions = shaderVariableDefinitionListSerialiser.Read (abr),
            };

            return sd;
        }

        public override void Write(BinaryWriter abw, ShaderDefinition obj)
        {
            stringSerialiser.Write (abw, obj.Name);
            stringListSerialiser.Write (abw, obj.PassNames);
            shaderInputDefinitionListSerialiser.Write (abw, obj.InputDefinitions);
            shaderSamplerDefinitionListSerialiser.Write (abw, obj.SamplerDefinitions);
            shaderVariableDefinitionListSerialiser.Write (abw, obj.VariableDefinitions);
        }
    }

