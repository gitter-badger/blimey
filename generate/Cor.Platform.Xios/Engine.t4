    public sealed class Engine
        : ICor
    {
        readonly TouchScreen touchScreen;
        readonly AppSettings settings;
        readonly IApp app;
        readonly GraphicsManager graphics;
        readonly InputManager input;
        readonly SystemManager system;
        readonly AudioManager audio;
        readonly DisplayStatus displayStatus;
        readonly LogManager log;
        readonly AssetManager assets;

        internal Engine(
            AppSettings settings,
            IApp app,
            OpenTK.Platform.iPhoneOS.iPhoneOSGameView view,
            OpenTK.Graphics.IGraphicsContext gfxContext,
            Dictionary<Int32, iOSTouchState> touches)
        {
            this.settings = settings;

            this.app = app;

            this.graphics = new GraphicsManager();

            this.touchScreen = new TouchScreen(this, view, touches);

            this.system = new SystemManager(touchScreen);

            this.input = new InputManager(this, this.touchScreen);

            this.displayStatus = new DisplayStatus ();

            this.log = new LogManager(this.settings.LogSettings);

            this.assets = new AssetManager(this.graphics, this.system);

            this.app.Initilise(this);

        }

        internal TouchScreen TouchScreenImplementation
        {
            get
            {
                return touchScreen;
            }
        }

        #region ICor

        public IAudioManager Audio { get { return this.audio; } }

        public IGraphicsManager Graphics { get { return this.graphics; } }

        public IInputManager Input { get { return this.input; } }

        public ISystemManager System { get { return this.system; } }

        public IDisplayStatus DisplayStatus { get { return this.displayStatus; } }

        public LogManager Log { get { return this.log; } }

        public AssetManager Assets { get { return this.assets; } }

        public AppSettings Settings { get { return this.settings; } }

        #endregion

        internal Boolean Update(AppTime time)
        {
            input.Update(time);
            return app.Update(time);
        }

        internal void Render()
        {
            app.Render();
        }

    }

