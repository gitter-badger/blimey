	internal class PotentialFlickGesture
		: PotentialGesture
	{
		const float velocityRequired = 0.05f;
		const float displacementRequired = 0.01f;

		internal PotentialFlickGesture(
			InputEventSystem inputEventSystem,
			Int32[] touchIDs)
			: base(inputEventSystem, GestureType.Flick, touchIDs)
		{

		}

		internal override Gesture Update(
			float dt,
			List<TouchTracker> touchTrackers)
		{
			var touchTracker = inputEventSystem.GetTouchTracker(touchIDs[0]);

			if (touchTracker == null)
			{
				failedGesture = true;
				return null;
			}

			var velocity = touchTracker.GetVelocity(TouchPositionSpace.RealWorld).Length();


			float distanceTravelled = touchTracker.GetDistanceTraveled(TouchPositionSpace.RealWorld);

			if (velocity >= velocityRequired &&
				distanceTravelled >= displacementRequired &&
				touchTracker.Phase == TouchPhase.JustReleased )
			{
				completedGesture = true;
				return new Gesture(this.inputEventSystem, this.type, this.touchIDs);
			}

			if( touchTracker.Phase == TouchPhase.JustReleased )
			{
				failedGesture = true;
			}

			return null;
		}
	}

