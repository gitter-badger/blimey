	public class TouchCollection
		: IEnumerable<Touch>
	{
		List<Touch> touchBuffer = new List<Touch>();

		IEnumerator IEnumerable.GetEnumerator()
		{
			return GetEnumerator();
		}

		IEnumerator<Touch> IEnumerable<Touch>.GetEnumerator()
		{
			return GetEnumerator();
		}

		internal void ClearBuffer()
		{
			this.touchBuffer.Clear();
		}

		internal void RegisterTouch(Int32 id, Vector2 normalisedEngineSpacePosition, TouchPhase phase, Int64 frameNum, Single timestamp)
		{
			bool die = false;
			if( normalisedEngineSpacePosition.X > 0.5f || normalisedEngineSpacePosition.X < -0.5f )
			{
				Console.WriteLine("Touch has a bad X coordinate: " + normalisedEngineSpacePosition.X);
				die = true;
			}
			
			if( normalisedEngineSpacePosition.Y > 0.5f || normalisedEngineSpacePosition.X < -0.5f )
			{
				Console.WriteLine("Touch has a bad Y coordinate: " + normalisedEngineSpacePosition.Y);
				die = true;
			}
			if (die)
			{
				Console.WriteLine("Discarding Bad Touch");
				return;
			}

			var touch = new Touch(id, normalisedEngineSpacePosition, phase, frameNum, timestamp);

			this.touchBuffer.Add(touch);
		}

		public IEnumerator<Touch> GetEnumerator()
		{
			return new TouchCollectionEnumerator(this.touchBuffer);
		}

		public int TouchCount
		{
			get
			{
				return touchBuffer.Count;
			}
		}

		public Touch GetTouchFromTouchID(int zTouchID)
		{
			foreach (var touch in touchBuffer)
			{
				if (touch.ID == zTouchID) return touch;
			}

			//System.Diagnostics.Debug.WriteLine("The touch requested no longer exists.");
			return Touch.Invalid;
		}
	}