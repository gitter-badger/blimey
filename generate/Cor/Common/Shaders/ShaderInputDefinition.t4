    public sealed class ShaderInputDefinition
    {
        String niceName;
        Type defaultType;
        Object defaultValue;

        public ShaderInputDefinition ()
        {
            this.Name = String.Empty;
        }

        // Defines which Cor! Types the DefaultValue can be set to.
        // The order of this list is important as the Cor Serialisation
        // of this class depends upon indexing into it.
        public static Type [] SupportedTypes
        { 
            get
            {
                return new [] 
                {
                    typeof (Matrix44),
                    typeof (Int32),
                    typeof (Single),
                    typeof (Abacus.SinglePrecision.Vector2),
                    typeof (Abacus.SinglePrecision.Vector3),
                    typeof (Abacus.SinglePrecision.Vector4),
                    typeof (Rgba32)
                };
            }
        }

        public String NiceName
        {
            get { return (niceName == null) ? Name : niceName; }
            set { niceName = value; }
        }
        
        public String Name { get; set; }

        public VertexElementUsage Usage { get; set; }

        public Type Type
        {
            get { return defaultType; }
        }
        public Object DefaultValue
        {
            get { return defaultValue; }
            set
            {
                Type t = value.GetType ();
                if (!SupportedTypes.ToList ().Contains (t))
                {
                    throw new Exception ();
                }

                defaultType = t;
                defaultValue = value;
            }
        }

        public Boolean Optional { get; set; }
    }

