    internal static class Vector2Converter
    {
        // VECTOR 2
        internal static global::MonoMac.OpenGL.Vector2 ToOpenGL (this Vector2 vec)
        {
            return new global::MonoMac.OpenGL.Vector2 (vec.X, vec.Y);
        }

        internal static Vector2 ToAbacus (this global::MonoMac.OpenGL.Vector2 vec)
        {
            return new Vector2 (vec.X, vec.Y);
        }

        
        internal static System.Drawing.PointF ToSystemDrawing(this Vector2 vec)
        {
            return new System.Drawing.PointF (vec.X, vec.Y);
        }

        internal static Vector2 ToAbacus (this System.Drawing.PointF vec)
        {
            return new Vector2 (vec.X, vec.Y);
        }
    }

    
    internal static class Vector3Converter
    {
        // VECTOR 3
        internal static global::MonoMac.OpenGL.Vector3 ToOpenGL (this Vector3 vec)
        {
            return new global::MonoMac.OpenGL.Vector3 (vec.X, vec.Y, vec.Z);
        }

        internal static Vector3 ToAbacus (this global::MonoMac.OpenGL.Vector3 vec)
        {
            return new Vector3 (vec.X, vec.Y, vec.Z);
        }
    }
    
    internal static class Vector4Converter
    {
        // VECTOR 3
        internal static global::MonoMac.OpenGL.Vector4 ToOpenGL (this Vector4 vec)
        {
            return new global::MonoMac.OpenGL.Vector4 (vec.X, vec.Y, vec.Z, vec.W);
        }

        internal static Vector4 ToAbacus (this global::MonoMac.OpenGL.Vector4 vec)
        {
            return new Vector4 (vec.X, vec.Y, vec.Z, vec.W);
        }
    }

    internal static class MatrixConverter
    {
        static bool flip = false;

        // MATRIX
        internal static global::MonoMac.OpenGL.Matrix4 ToOpenGL (this Matrix44 mat)
        {
            if( flip )
            {
                return new global::MonoMac.OpenGL.Matrix4(
                    mat.R0C0, mat.R1C0, mat.R2C0, mat.R3C0,
                    mat.R0C1, mat.R1C1, mat.R2C1, mat.R3C1,
                    mat.R0C2, mat.R1C2, mat.R2C2, mat.R3C2,
                    mat.R0C3, mat.R1C3, mat.R2C3, mat.R3C3
                    );
            }
            else
            {
                return new global::MonoMac.OpenGL.Matrix4(
                    mat.R0C0, mat.R0C1, mat.R0C2, mat.R0C3,
                    mat.R1C0, mat.R1C1, mat.R1C2, mat.R1C3,
                    mat.R2C0, mat.R2C1, mat.R2C2, mat.R2C3,
                    mat.R3C0, mat.R3C1, mat.R3C2, mat.R3C3
                    );
            }
        }

        internal static Matrix44 ToAbacus (this global::MonoMac.OpenGL.Matrix4 mat)
        {

            if( flip )
            {
                return new Matrix44(
                    mat.M11, mat.M21, mat.M31, mat.M41,
                    mat.M12, mat.M22, mat.M32, mat.M42,
                    mat.M13, mat.M23, mat.M33, mat.M43,
                    mat.M14, mat.M24, mat.M34, mat.M44
                    );
            }
            else
            {
                return new Matrix44(
                    mat.M11, mat.M12, mat.M13, mat.M14,
                    mat.M21, mat.M22, mat.M23, mat.M24,
                    mat.M31, mat.M32, mat.M33, mat.M34,
                    mat.M41, mat.M42, mat.M43, mat.M44
                    );
            }
        }

    }

