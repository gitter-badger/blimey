    public class StubVertexBuffer
        : IVertexBuffer
    {
        public StubVertexBuffer()
        {
            InternalUtils.Log.Info(
                "StubVertexBuffer -> ()");
        }

        #region IVertexBuffer

        public Int32 VertexCount { get { return 0; } }

        public VertexDeclaration VertexDeclaration
        {
            get { return null; }
        }

        public void SetData<T> (T[] data)
        where T
            : struct
            , IVertexType
        {
        }

        public T[] GetData<T> ()
        where T
            : struct
            , IVertexType
        {
            throw new NotImplementedException();
        }
 
        public void SetData<T> (T[] data, Int32 startIndex, Int32 elementCount)
        where T
            : struct
            , IVertexType
        {
        }
        
        public T[] GetData<T> (Int32 startIndex, Int32 elementCount)
        where T
            : struct
            , IVertexType
        {
            throw new NotImplementedException();
        }

        public void SetRawData (
            Byte[] data,
            Int32 startIndex, 
            Int32 elementCount)
        {
        }
        
        public Byte[] GetRawData (
            Int32 startIndex,
            Int32 elementCount)
        {
            throw new NotImplementedException();
        }
        
        #endregion
    }

