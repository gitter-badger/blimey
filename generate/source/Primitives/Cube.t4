	public class CubePrimitive
		: GeometricPrimitive
	{
		/// <summary>
		/// Constructs a new cube primitive, with the specified size.
		/// </summary>
		public CubePrimitive (IGraphicsManager graphicsDevice)
		{
			// A cube has six faces, each one pointing in a different direction.
			Vector3[] normals =
			{
				new Vector3 (0, 0, 1),
				new Vector3 (0, 0, -1),
				new Vector3 (1, 0, 0),
				new Vector3 (-1, 0, 0),
				new Vector3 (0, 1, 0),
				new Vector3 (0, -1, 0),
			};

			// Create each face in turn.
            for (int i = 0; i < normals.Length; ++i )
            {
                Vector3 n = normals[i];

                // Get two vectors perpendicular to the face normal and to each other.
                Vector3 side1 = new Vector3(n.Y, n.Z, n.X);
                Vector3 side2;
                
                Vector3.Cross(ref n, ref side1, out side2);

                // Six indices (two triangles) per face.
                AddIndex(CurrentVertex + 0);
                AddIndex(CurrentVertex + 1);
                AddIndex(CurrentVertex + 2);

                AddIndex(CurrentVertex + 0);
                AddIndex(CurrentVertex + 2);
                AddIndex(CurrentVertex + 3);

                // Four vertices per face.
                AddVertex((n - side1 - side2) / 2, n);
                AddVertex((n - side1 + side2) / 2, n);
                AddVertex((n + side1 + side2) / 2, n);
                AddVertex((n + side1 - side2) / 2, n);
            }

			InitializePrimitive (graphicsDevice);
		}
	}

